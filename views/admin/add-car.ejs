<%- include('../partials/header') %>

<section class="form-card">
  <h1 class="form-title">Add a Car</h1>

  <% if (error) { %>
    <div style="color:#ffb3c7;margin-bottom:10px;"><strong><%= error %></strong></div>
  <% } %>

  <form id="addCarForm" action="/admin/add-car" method="POST" enctype="multipart/form-data" class="form">
    <!-- Make / Model -->
    <div class="form-row">
      <div>
        <label class="label">Make</label>
        <input type="text" name="make" placeholder="e.g., BMW" required />
      </div>
      <div>
        <label class="label">Model</label>
        <input type="text" name="model" placeholder="e.g., 535i" required />
      </div>
    </div>

    <!-- Year / Price -->
    <div class="form-row">
      <div>
        <label class="label">Year</label>
        <input type="number" name="year" placeholder="e.g., 2013" required />
      </div>
      <div>
        <label class="label">Price</label>
        <input type="number" name="price" placeholder="e.g., 17999" required />
      </div>
    </div>

    <!-- Colors -->
    <div class="form-row">
      <div>
        <label class="label">Exterior Color</label>
        <select name="exteriorColor">
          <option value="">Select exterior</option>
          <option>Black</option>
          <option>White</option>
          <option>Gray</option>
          <option>Silver</option>
          <option>Blue</option>
          <option>Red</option>
          <option>Green</option>
          <option>Brown</option>
          <option>Beige</option>
          <option>Yellow</option>
          <option>Orange</option>
          <option>Purple</option>
          <option>Gold</option>
          <option>Other</option>
        </select>
      </div>
      <div>
        <label class="label">Interior Color</label>
        <select name="interiorColor">
          <option value="">Select interior</option>
          <option>Black</option>
          <option>Gray</option>
          <option>Beige / Tan</option>
          <option>Brown</option>
          <option>Red</option>
          <option>White</option>
          <option>Blue</option>
          <option>Other</option>
        </select>
      </div>
    </div>

    <!-- Mileage / Engine -->
    <div class="form-row">
      <div>
        <label class="label">Mileage (km)</label>
        <input type="number" name="mileage" placeholder="e.g., 110000" />
      </div>
      <div>
        <label class="label">Engine</label>
        <input type="text" name="engine" placeholder="e.g., 3.0L I6 TwinPower Turbo" />
      </div>
    </div>

    <!-- Transmission / Drivetrain -->
    <div class="form-row">
      <div>
        <label class="label">Transmission</label>
        <select name="transmission">
          <option value="">Select transmission</option>
          <option>Automatic</option>
          <option>Manual</option>
          <option>Dual-clutch</option>
          <option>CVT</option>
          <option>Other</option>
        </select>
      </div>
      <div>
        <label class="label">Drivetrain</label>
        <select name="drivetrain">
          <option value="">Select drivetrain</option>
          <option>AWD</option>
          <option>FWD</option>
          <option>RWD</option>
          <option>4WD / 4x4</option>
        </select>
      </div>
    </div>

    <!-- Fuel / Body Style -->
    <div class="form-row">
      <div>
        <label class="label">Fuel</label>
        <select name="fuel">
          <option value="">Select fuel</option>
          <option>Gasoline</option>
          <option>Diesel</option>
          <option>Hybrid</option>
          <option>Plug-in Hybrid</option>
          <option>Electric</option>
          <option>Flex Fuel</option>
          <option>Other</option>
        </select>
      </div>
      <div>
        <label class="label">Body Style</label>
        <select name="bodyStyle">
          <option value="">Select body style</option>
          <option>Sedan</option>
          <option>Hatchback</option>
          <option>Coupe</option>
          <option>Convertible</option>
          <option>SUV</option>
          <option>Crossover</option>
          <option>Truck</option>
          <option>Van / Minivan</option>
          <option>Wagon</option>
          <option>Other</option>
        </select>
      </div>
    </div>

    <!-- VIN -->
    <div>
      <label class="label">VIN</label>
      <input type="text" name="vin" placeholder="Optional" />
    </div>

    <!-- Description -->
    <div>
      <label class="label">Short Description</label>
      <textarea name="description" placeholder="Add a short blurb (the specs cover the rest)"></textarea>
    </div>

    <!-- Images -->
    <div>
      <label class="label">Upload Car Images</label>
      <input id="imagesInput" type="file" name="images" accept="image/*" multiple required />
      <small style="color:var(--muted);display:block;margin-top:6px;">
        Tip: we’ll auto-compress to WebP (max 1600px) so uploads are fast.
      </small>
    </div>

    <!-- Actions -->
    <div class="row">
      <button id="submitBtn" type="submit" class="btn btn-primary">Add Car</button>
      <a href="/admin/dashboard" class="btn btn-muted">← Back to Dashboard</a>
    </div>
  </form>
</section>

<script>
  (function(){
    const form = document.getElementById('addCarForm');
    const fileInput = document.getElementById('imagesInput');
    const submitBtn = document.getElementById('submitBtn');

    // Helper: read a File -> HTMLImageElement
    function fileToImage(file){
      return new Promise((resolve, reject) => {
        const url = URL.createObjectURL(file);
        const img = new Image();
        img.onload = () => { URL.revokeObjectURL(url); resolve(img); };
        img.onerror = reject;
        img.src = url;
      });
    }

    // Compress to maxWidth=1600 (keep aspect), prefer webp, fallback jpeg
    async function compressImage(file, maxWidth = 1600, quality = 0.8){
      const img = await fileToImage(file);
      const canvas = document.createElement('canvas');
      const scale = Math.min(1, maxWidth / img.width);
      canvas.width = Math.round(img.width * scale);
      canvas.height = Math.round(img.height * scale);
      const ctx = canvas.getContext('2d');
      ctx.drawImage(img, 0, 0, canvas.width, canvas.height);

      // Try WebP first
      let blob = await new Promise(res => canvas.toBlob(res, 'image/webp', quality));
      // Safari on some versions can return null for webp
      if (!blob) {
        blob = await new Promise(res => canvas.toBlob(res, 'image/jpeg', 0.85));
      }
      const ext = blob.type.includes('webp') ? 'webp' : 'jpg';
      return new File([blob], `${file.name.replace(/\.[^.]+$/, '')}.${ext}`, { type: blob.type, lastModified: Date.now() });
    }

    form.addEventListener('submit', async (e) => {
      // If no files, let normal submit happen
      if (!fileInput.files || fileInput.files.length === 0) return;

      e.preventDefault();
      submitBtn.disabled = true;
      submitBtn.textContent = 'Uploading…';

      try {
        const fd = new FormData();

        // copy all non-file fields from the form
        new FormData(form).forEach((value, key) => {
          if (key !== 'images') fd.append(key, value);
        });

        // compress files one by one (or small batches)
        const files = Array.from(fileInput.files);
        for (const f of files) {
          const small = await compressImage(f, 1600, 0.8);
          fd.append('images', small, small.name);
        }

        // post to the same endpoint
        const resp = await fetch(form.action, {
          method: 'POST',
          body: fd
        });

        if (resp.redirected) {
          window.location.href = resp.url; // typical case (redirect to dashboard)
        } else if (resp.ok) {
          window.location.reload();
        } else {
          const text = await resp.text();
          alert('Upload failed: ' + text);
          submitBtn.disabled = false;
          submitBtn.textContent = 'Add Car';
        }
      } catch (err) {
        console.error(err);
        alert('Upload failed. See console for details.');
        submitBtn.disabled = false;
        submitBtn.textContent = 'Add Car';
      }
    });
  })();
</script>

<%- include('../partials/footer') %>
